name: Code Quality

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]

jobs:
  rust-checks:
    name: Rust Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev \
          libappindicator3-dev librsvg2-dev patchelf

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          frontend/src-tauri/target
        key: ${{ runner.os }}-cargo-quality-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      working-directory: frontend/src-tauri
      run: cargo fmt -- --check

    - name: Run clippy
      working-directory: frontend/src-tauri
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Check for TODO comments
      run: |
        echo "## TODO Comments Found:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        grep -rn "TODO\|FIXME\|HACK" frontend/src-tauri/src --include="*.rs" || echo "No TODOs found!" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

    - name: Security audit
      working-directory: frontend/src-tauri
      run: |
        cargo install cargo-audit
        cargo audit

  frontend-checks:
    name: Frontend Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: frontend
      run: npm ci

    - name: Check formatting
      working-directory: frontend
      run: npm run format:check || true

    - name: Run ESLint
      working-directory: frontend
      run: npm run lint

    - name: Type checking
      working-directory: frontend
      run: npm run check

    - name: Check bundle size
      working-directory: frontend
      run: |
        npm run build
        echo "## Bundle Size Report:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        du -sh dist/* >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: moderate

  coverage-report:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev \
          libappindicator3-dev librsvg2-dev patchelf

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Generate coverage
      working-directory: frontend/src-tauri
      run: |
        cargo tarpaulin --out Html --all-features --workspace \
          --exclude-files "*/tests/*" \
          --exclude-files "*/bin/*" \
          --exclude-files "*/build.rs" \
          --ignore-panics --ignore-tests \
          --timeout 300

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: frontend/src-tauri/tarpaulin-report.html