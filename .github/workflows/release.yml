name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: orchflow ${{ github.ref }}
          draft: true
          prerelease: false

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
            dist_target: linux
          - os: macos-latest
            rust_target: x86_64-apple-darwin
            dist_target: macos
          - os: macos-latest
            rust_target: aarch64-apple-darwin
            dist_target: macos-arm64
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            dist_target: windows

    runs-on: ${{ matrix.platform.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.platform.rust_target }}

    - name: Install Linux dependencies
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev \
          libappindicator3-dev librsvg2-dev patchelf

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Build Tauri App
      working-directory: frontend
      run: npm run tauri build -- --target ${{ matrix.platform.rust_target }}
      env:
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

    - name: Upload Release Assets (Ubuntu)
      if: matrix.platform.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./frontend/src-tauri/target/release/bundle/appimage/orchflow_*.AppImage
        asset_name: orchflow-${{ matrix.platform.dist_target }}.AppImage
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (macOS)
      if: matrix.platform.os == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./frontend/src-tauri/target/release/bundle/dmg/orchflow_*.dmg
        asset_name: orchflow-${{ matrix.platform.dist_target }}.dmg
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (Windows)
      if: matrix.platform.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./frontend/src-tauri/target/release/bundle/msi/orchflow_*.msi
        asset_name: orchflow-${{ matrix.platform.dist_target }}.msi
        asset_content_type: application/octet-stream