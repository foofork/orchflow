name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            rust: nightly
            coverage: true

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev \
          libappindicator3-dev librsvg2-dev patchelf

    - name: Install cargo-tarpaulin
      if: matrix.coverage
      run: cargo install cargo-tarpaulin

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: frontend/src-tauri/target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Run clippy
      working-directory: frontend/src-tauri
      run: cargo clippy --all-features -- -D warnings

    - name: Run tests
      working-directory: frontend/src-tauri
      run: cargo test --all-features

    - name: Run tests with coverage
      if: matrix.coverage
      working-directory: frontend/src-tauri
      run: |
        cargo tarpaulin --out Xml --all-features --workspace \
          --exclude-files "*/tests/*" \
          --exclude-files "*/bin/*" \
          --exclude-files "*/build.rs" \
          --ignore-panics --ignore-tests \
          --timeout 300

    - name: Upload coverage to Codecov
      if: matrix.coverage
      uses: codecov/codecov-action@v5
      with:
        files: ./frontend/src-tauri/cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  bench:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev \
          libappindicator3-dev librsvg2-dev patchelf

    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          frontend/src-tauri/target
        key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}

    - name: Run benchmarks
      working-directory: frontend/src-tauri
      run: cargo bench --no-fail-fast

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: frontend
      run: npm ci

    - name: Run linter
      working-directory: frontend
      run: npm run lint

    - name: Run type check
      working-directory: frontend
      run: npm run check

    - name: Run tests
      working-directory: frontend
      run: npm test -- --run

    - name: Build frontend
      working-directory: frontend
      run: npm run build

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, frontend-test]
    
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev \
          libappindicator3-dev librsvg2-dev patchelf

    - name: Install dependencies
      working-directory: frontend
      run: npm ci

    - name: Build Tauri app
      working-directory: frontend
      run: npm run tauri build

    - name: Run integration tests
      working-directory: frontend/src-tauri
      run: cargo test --test '*' --features integration-tests